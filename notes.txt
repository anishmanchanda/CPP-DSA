int n;
    cout<<"enter n:";
    cin>>n;
    int arr[n];
    for(int i=0;i<n;i++) {
        cout<<"enter element: ";
        cin>>arr[i];
    }

#include <climits>
int maxno=INT_MIN;
int minno=INT_MAX;
 
 VOID FUNCTIONS DO NOT RETURN ANY VALUE.

2nd method to create array
int arr[]={1,2,3,4,5,6,7}
 
2d arrays:-
table(matrix) like structure
 int arr[n collumns][m rows]

charecter arrays:-
there are n+1 elements in the array as last charecter must be null
char arr[n+1];

POINTERS
int*aptr;
// int* because a is int type variable. 
if bool type then bool*aptr;
aptr=&a;
//*aptr is original variable (a)
//&a is address of a

incrementing the pointer will increase it's value by 4
and not 1
this is because int consumes 4 bytes and pointer will 
move to next memory location which is 4 bytes away

in case of incrementing char pointer its value will
only increase by 1 as it consumes only 1 byte

POINTERS AND arrays

